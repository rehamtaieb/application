- hosts: k8s_master
  become: yes
  tasks:
    - name: Ensure conflicting packages are removed
      apt:
        name: containerd
        state: absent

    - name: Remove Docker repository configuration
      shell: |
        rm -f /etc/apt/sources.list.d/docker.list
        rm -f /etc/apt/sources.list.d/docker-ce.list
        rm -f /etc/apt/sources.list.d/docker*.list
        rm -f /etc/apt/keyrings/docker-apt-keyring.asc
      args:
        warn: false

    - name: Create Docker keyring directory if it does not exist
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Dockerâ€™s official GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker-apt-keyring.asc

    - name: Add Docker apt repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker-apt-keyring.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Update apt repository cache
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Install kubeadm, kubelet, and kubectl
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - kubeadm
        - kubelet
        - kubectl

    - name: Initialize Kubernetes master
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_output
      ignore_errors: yes

    - name: Set up kubectl for the current user
      command: "{{ item }}"
      with_items:
        - "mkdir -p $HOME/.kube"
        - "cp /etc/kubernetes/admin.conf $HOME/.kube/config"
        - "chown $(id -u):$(id -g) $HOME/.kube/config"

    - name: Install Calico network plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: "'calico' in kubeadm_output.stdout"

- hosts: k8s_worker
  become: yes
  tasks:
    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Install kubeadm, kubelet, and kubectl
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - kubeadm
        - kubelet
        - kubectl

    - name: Join worker nodes to the cluster
      command: "{{ hostvars['master']['kubeadm_output']['stdout_lines'][0] }}"
      when: "'kubeadm join' in hostvars['master']['kubeadm_output']['stdout']"
